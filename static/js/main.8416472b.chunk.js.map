{"version":3,"sources":["images/logo.svg","components/Header.js","images/trash.svg","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","images/close_icon.svg","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onCardDelete","type","trashCard","onCardClick","name","link","style","backgroundImage","onCardLike","aria-label","Main","avatar","onEditAvatar","onEditProfile","about","onAddPlace","cards","map","length","Footer","PopupWithForm","isOpen","onSubmit","id","method","action","autoComplete","noValidate","title","children","buttonText","onClose","closeIcon","ImagePopup","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","user","body","JSON","stringify","cardId","putLike","deleteLike","authorization","EditProfilePopup","useState","setName","description","setDescription","useEffect","evt","preventDefault","onUpdateUser","placeholder","required","minLength","maxLength","value","onChange","target","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","results","catch","err","console","log","getCards","Provider","deleteCard","newCards","filter","c","changeLikeCardStatus","newCard","state","setUserInfo","finally","createCard","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8416472b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03b78ada.svg\";","import headerLogo from '../images/logo.svg'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            <img src={headerLogo} className=\"header__logo\" alt=\"Логотип\" />\r\n        </div>\r\n    );\r\n}\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/trash.a274c87c.svg\";","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport trashCard from '../images/trash.svg';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n        `card__remove ${isOwn ? 'card__remove_visible' : 'card__remove_hidden'}`\r\n    );\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (\r\n        `card__like ${isLiked ? 'card__like_active' : 'card__like'}`\r\n    );\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.name, props.link);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <button onClick={handleDeleteClick} type=\"button\" className={cardDeleteButtonClassName}><img src={trashCard} alt=\"корзина\" /></button>\r\n            <div onClick={handleClick} className=\"card__image-block\" style={{ backgroundImage: `url(${props.link})` }}>\r\n            </div>\r\n            <div className=\"card__text\">\r\n                <h2 className=\"card__title\">{props.name}</h2>\r\n                <div className=\"card__like-wrap\">\r\n                    <button onClick={handleLikeClick} className={cardLikeButtonClassName} type=\"button\" aria-label=\"Мне нравится\" />\r\n                    <span className='card__likes-counter'>{props.likes}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"content\">\r\n                <section className=\"profile\">\r\n                    <div className=\"profile__avatar-block\">\r\n                        <div className=\"profile__avatar\" alt=\"аватар\" style={{ backgroundImage: `url(${currentUser.avatar})` }} />\r\n                        <div onClick={props.onEditAvatar} className=\"profile__avatar-overlay\"></div>\r\n                    </div>\r\n                    <div className=\"profile__info\">\r\n                        <div className=\"profile__text\">\r\n                            <h1 className=\"profile__title\">{currentUser.name}</h1>\r\n                            <button onClick={props.onEditProfile} className=\"profile__button-edit\" type=\"button\" aria-label=\"Редактировать профиль\"></button>\r\n                        </div>\r\n                        <p className=\"profile__subtitle\">{currentUser.about}</p>\r\n\r\n                    </div>\r\n\r\n                    <button onClick={props.onAddPlace} className=\"profile__button-add\" aria-label=\"Добавить карточку\" type=\"button\"></button>\r\n\r\n                </section>\r\n                <section className=\"elements\">\r\n                    {props.cards.map((card) => (\r\n                        <Card\r\n                            key={card._id}\r\n                            link={card.link}\r\n                            name={card.name}\r\n                            likes={card.likes.length}\r\n                            card={card}\r\n                            onCardClick={props.onCardClick}\r\n                            onCardDelete={props.onCardDelete}\r\n                            onCardLike={props.onCardLike}\r\n                        />)\r\n                    )}\r\n                </section>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__author\">&copy; 2021 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/close_icon.dac22d3e.svg\";","import React from \"react\";\r\nimport closeIcon from '../images/close_icon.svg'\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}>\r\n            <form onSubmit={props.onSubmit} className=\"popup__container\" name={props.name} id={props.name} method=\"post\" action=\"#\" autoComplete=\"off\" noValidate>\r\n                <h3 className=\"popup__title\">{props.title}</h3>\r\n                {props.children}\r\n                <button className=\"popup__form-submit\" type=\"submit\">{props.buttonText}</button>\r\n                <button onClick={props.onClose} className=\"popup__close\" type=\"button\"><img src={closeIcon} className=\"popup__close-image\" alt=\"кнопка закрытия\" /></button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\nexport default PopupWithForm;","import React from \"react\";\r\nimport closeIcon from '../images/close_icon.svg'\r\n\r\nfunction ImagePopup(props) {\r\n    return (\r\n        <section\r\n            className={`popup popup_type_${props.name} ${props.isOpen ? \"popup_opened\" : \"\"}`}\r\n        >\r\n            <div className=\"popup-image__container\">\r\n                <button onClick={props.onClose} className=\"popup__close\" aria-label=\"Закрыть\" type=\"button\">\r\n                    <img src={closeIcon} className=\"popup-image__close-btn\" alt=\"кнопка закрытия\" />\r\n                </button>\r\n\r\n                <img src={props.card.link} alt={props.card.name} className=\"popup-image__content\" id=\"img01\" />\r\n                <div className=\"popup-image__caption\">{props.card.name}</div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this._baseUrl = baseUrl;\r\n        this._headers = headers;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка ${res.status}`);\r\n    }\r\n\r\n    getCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    setUserInfo(user) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: user.name,\r\n                about: user.about,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    createCard(card) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: \"POST\",\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link,\r\n            }),\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    putLike(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: \"PUT\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n\r\n    deleteLike(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: \"DELETE\",\r\n            headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    changeLikeCardStatus(cardId, isLiked) {\r\n        if (isLiked) {\r\n            return this.putLike(cardId)\r\n        }\r\n        else {\r\n            return this.deleteLike(cardId)\r\n        }\r\n    }\r\n\r\n    updateAvatar(avatar) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this._headers,\r\n            body: JSON.stringify(avatar),\r\n        }).then(this._checkResponse);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-22\",\r\n    headers: {\r\n        authorization: \"bb37a53f-65dd-4153-b255-188fa4e0f13b\",\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\nexport default api","import React, { useEffect, useState } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    // Подписка на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleChangeName(evt) {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    function handleChangeDescription(evt) {\r\n        setDescription(evt.target.value);\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        evt.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            onSubmit={handleSubmit}\r\n            title='Редактировать профиль'\r\n            name='profile'\r\n            buttonText='Сохранить'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}>\r\n            <input\r\n                className=\"popup__input popup__input_name\"\r\n                type=\"text\"\r\n                id=\"title-name\"\r\n                name=\"name\"\r\n                placeholder=\"Имя\"\r\n                aria-label=\"Имя\"\r\n                required\r\n                minLength={2}\r\n                maxLength={40}\r\n                value={name}\r\n                onChange={handleChangeName}\r\n            />\r\n            <span className=\"popup__input-error popup__input-error_name\" id=\"title-name-error\"></span>\r\n            <input\r\n                className=\"popup__input popup__input_about\"\r\n                type=\"text\"\r\n                id=\"about-name\"\r\n                name=\"about\"\r\n                placeholder=\"Род деятельности\"\r\n                aria-label=\"О себе\"\r\n                required\r\n                minLength={2}\r\n                maxLength={200}\r\n                value={description}\r\n                onChange={handleChangeDescription}\r\n            />\r\n            <span className=\"popup__input-error popup__input-error_about\" id=\"about-name-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: avatarRef.current.value,\r\n        });\r\n    }\r\n    return (\r\n        <PopupWithForm\r\n            onSubmit={handleSubmit}\r\n            title='Обновить аватар'\r\n            name='update-avatar'\r\n            buttonText='Обновить'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n\r\n        >\r\n\r\n            <input\r\n                id=\"avatar-link\"\r\n                type=\"url\"\r\n                name=\"avatar\"\r\n                className=\"popup__input\"\r\n                placeholder=\"Ссылка на аватар\"\r\n                required\r\n                aria-label=\"Ссылка на аватар\"\r\n                ref={avatarRef}\r\n\r\n            />\r\n            <span className=\"popup__input-error popup__input-error_avatar\" id=\"avatar-link-error\"></span>\r\n\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = useState('');\r\n  const [link, setLink] = useState('');\r\n\r\n  function handleChangeName(evt) {\r\n    setName(evt.target.value)\r\n  }\r\n\r\n  function handleChangeLink(evt) {\r\n    setLink(evt.target.value);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    props.onAddPlace({\r\n      name,\r\n      link\r\n    });\r\n    setName('');\r\n    setLink('');\r\n\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      onSubmit={handleSubmit}\r\n      title='Новое место'\r\n      name='add'\r\n      buttonText='Создать'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}>\r\n      <input\r\n        className=\"popup__input popup__input_place\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"place-name\"\r\n        placeholder=\"Название\"\r\n        required\r\n        minLength={2}\r\n        maxLength={30}\r\n        value={name}\r\n        onChange={handleChangeName}\r\n\r\n      />\r\n      <span className=\"popup__input-error popup__input-error_place\" id=\"place-name-error\"></span>\r\n      <input\r\n        className=\"popup__input popup__input_image\"\r\n        type=\"url\"\r\n        name=\"link\"\r\n        id=\"link-image\"\r\n        placeholder=\"Ссылка на картинку\"\r\n        required\r\n        value={link}\r\n        onChange={handleChangeLink}\r\n\r\n      />\r\n      <span className=\"popup__input-error popup__input-error_image\" id=\"link-image-error\"></span>\r\n    </PopupWithForm>\r\n  )\r\n\r\n}\r\n\r\nexport default AddPlacePopup","import React, { useEffect, useState } from 'react';\nimport '../index.css';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n\n  const [selectedCard, setSelectedCard] = useState({ link: '', name: '', isOpen: false });\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleCardClick(name, link) {\n    setSelectedCard({\n      name: name,\n      link: link,\n      isOpen: true\n    });\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setSelectedCard({ link: '', name: '', isOpen: false })\n  }\n\n  useEffect(() => {\n    api.getUserInfo()\n      .then((results) => {\n        setCurrentUser(\n          {\n            _id: results._id,\n            name: results.name,\n            about: results.about,\n            avatar: results.avatar\n          }\n        )\n      })\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`));\n  }, [])\n\n  useEffect(() => {\n    api.getCards()\n      .then((results) => {\n        setCards(results)\n      })\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`));\n  }, [])\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id)\n      .then(() => {\n        // Определяем, являемся ли мы владельцем текущей карточки\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`));\n  }\n\n  function handleCardLike(card) {\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n      })\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`));\n  }\n\n  function handleUpdateUser(currentUser) {\n    api.setUserInfo(currentUser)\n      .then((results) => {\n        setCurrentUser(results)\n      })\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`))\n      .finally(() => closeAllPopups());\n  }\n\n  function handleUpdateAvatar(avatar) {\n    api.updateAvatar(avatar)\n      .then((avatar) => setCurrentUser(avatar))\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`))\n      .finally(() => closeAllPopups());\n  }\n\n  function handleAddPlaceSubmit(currentUser) {\n    api.createCard(currentUser)\n      .then((results) => setCards([results, ...cards]))\n      .catch((err) =>\n        console.log(`Ошибка: ${err}`))\n      .finally(() => closeAllPopups());\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root\">\n        <Header />\n        <Main\n          onEditAvatar={handleEditAvatarClick}\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardDelete={handleCardDelete}\n          onCardLike={handleCardLike}\n        >\n        </Main>\n\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <AddPlacePopup\n\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <PopupWithForm\n          title='Вы уверены?'\n          name='popup-confirm'\n          buttonText='Сохранить'>\n        </PopupWithForm>\n\n        <ImagePopup\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}